<div>
    <div class="flex gap-2">
        <h5>Overdue</h5>
        <a href="#" id="count-overdue" class="bg-gray-200  text-sm rounded pl-3 pr-3 my-0.5">
            <%= overdueTodo.length %>
        </a>
    </div>
    <ul class="list-none">
        <% for( let i = 0; i < overdueTodo.length; i++ ) { %>
            <li class="Todo-Item">
                <div class="flex w-fit my-2 px-2 py-1 item-center hover:bg-purple-50 rounded">
                    <input id="todo-overdue-checkbox-<%= i %>" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 mark-completed" data-id="<%= overdueTodo[i].id %>" <%= overdueTodo[i].completed ? 'checked disabled' : '' %>/>
                    <label for="todo-overdue-checkbox-<%= i %>" class="ml-2 text-sm text-gray-600 cursor-pointer"><%= overdueTodo[i].title %></label>
                    <a href="#" class="hidden trash-icon ml-2" data-id="<%= overdueTodo[i].id %>">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                        </svg>
                    </a>
                </div>
            </li>
        <% } %>
    </ul>
    <div class="flex gap-2">
        <h5>Due Today</h5>
        <a href="#" id="count-due-today" class="bg-gray-200 text-sm rounded pl-3 pr-3 my-0.5">
            <%= dueToday.length %>
        </a>
    </div>
    <ul class="list-none">
        <% for( let i = 0; i < dueToday.length; i++ ) { %>
            <li class="Todo-Item">
                <div class="flex w-fit my-2 px-2 py-1 item-center hover:bg-purple-50 rounded">
                    <input id="todo-dueToday-checkbox-<%= i %>" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 mark-completed" data-id="<%= dueToday[i].id %>" <%= dueToday[i].completed ? 'checked disabled' : '' %>/>
                    <label for="todo-dueToday-checkbox-<%= i %>" class="ml-2 text-sm text-gray-600 cursor-pointer"><%= dueToday[i].title %></label>
                    <a href="#" class="hidden trash-icon ml-2" data-id="<%= dueToday[i].id %>">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                        </svg>
                    </a>
                </div>
            </li>
        <% } %>
    </ul>
    <div class="flex gap-2">
        <h5>Due Later</h5>
        <a href="#" id="count-due-later" class="bg-gray-200 text-sm rounded pl-3 pr-3 my-0.5">
            <%= dueLater.length %>
        </a>
    </div>
    <ul class="list-none">
        <% for( let i = 0; i < dueLater.length; i++ ) { %>
            <li class="Todo-Item">
                <div class="flex w-fit my-2 px-2 py-1 item-center hover:bg-purple-50 rounded">
                    <input id="todo-dueLater-checkbox-<%= i %>" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 mark-completed" data-id="<%= dueLater[i].id %>" <%= dueLater[i].completed ? 'checked disabled' : '' %>/>
                    <label for="todo-dueLater-checkbox-<%= i %>" class="ml-2 text-sm text-gray-600 cursor-pointer"><%= dueLater[i].title %></label>
                    <a href="#" class="hidden trash-icon ml-2" data-id="<%= dueLater[i].id %>">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0" />
                        </svg>
                    </a>
                </div>
            </li>
        <% } %>
    </ul>
    <script>
        document.querySelectorAll(".mark-completed").forEach((checkbox) => {
          checkbox.addEventListener("click", async function () {
            const todoId = this.getAttribute("data-id");
      
            try {
              const response = await fetch(`/todos/${todoId}/markAsCompleted`, {
                method: "PUT",
              });
              
              if (response.ok) {
                location.reload();
              } else {
                alert("Failed to mark as completed");
              }
            } catch (error) {
              console.error("Error:", error);
            }
          });
        });
        document.querySelectorAll(".trash-icon").forEach((icon) => {
            icon.addEventListener("click", async function (e) {
                e.preventDefault();  // Prevent default anchor behavior

                const todoId = this.getAttribute("data-id");

                if (confirm("Are you sure you want to delete this task?")) {
                    try {
                        const response = await fetch(`/todos/${todoId}`, {
                            method: "DELETE",
                        });

                        if (response.ok) {
                            location.reload();  // Reload the page to reflect the changes
                        } else {
                            alert("Failed to delete the task");
                        }
                    } catch (error) {
                        console.error("Error:", error);
                    }
                }
            });
        });
      </script>
</div>